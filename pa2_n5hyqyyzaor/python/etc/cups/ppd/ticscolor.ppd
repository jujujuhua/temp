*PPD-Adobe: "4.3"*% Adobe Systems PostScript(R) Printer Description File*% Copyright (c) Tektronix, Incorporated.  All rights reserved.*% Tektronix (R) is a registered trademark of Tektronix, Inc.*% TekColor TM is a trademark of Tektronix, Inc.*% Phaser (R) is a registered trademark of Tektronix, Inc.,*% for color printers and related products.  (Env + 1200 Mono)*FormatVersion: "4.3"*FileVersion: "1.1"*LanguageEncoding: ISOLatin1*LanguageVersion: English*Product: "(Phaser 560)"*PSVersion: "(2015.105) 14"*Manufacturer: "Tektronix"*ModelName: "Tektronix Phaser 560 Extended"*ShortNickName: "Tektronix Phaser 560 Extended"*NickName: "Tektronix Phaser 560 with Extended Features"*PCFileName: "TKP560P1.PPD"*% === Installable Options ===========*OpenGroup: InstallableOptions/Options Installed*OpenUI *InstalledMemory/Memory Configuration: PickOne*OrderDependency: 69.0 AnySetup *InstalledMemory*DefaultInstalledMemory: None*InstalledMemory None/Standard 40 MB RAM: ""*InstalledMemory 56Meg/56 MB Total RAM: ""*InstalledMemory 72Meg/72 MB Total RAM: ""*?InstalledMemory: "% InstalledMemory  currentsystemparams /RamSize get 16#100000 div round cvi dup 42 lt { pop (None) } {2 string cvs print (Meg) } ifelse print (\n) print flush"*End*CloseUI: *InstalledMemory*OpenUI *Option3/Optional Lower Trays: Boolean*OrderDependency: 69.2 AnySetup *Option3*DefaultOption3: False*Option3 True/Installed: ""*Option3 False/Not Installed: ""*?Option3: "currentpagedevice /InputAttributes get 1 known{ (True) } { (False) } ifelse = flush"*End*CloseUI: *Option3*OpenUI *Option1/Optional Hard Drive: Boolean*OrderDependency: 69.4 AnySetup *Option1*DefaultOption1: False*Option1 True/Installed: ""*Option1 False/Not Installed: ""*?Option1: " false (%disk?%) { currentdevparams dup /Writeable known   { /Writeable get {pop true} if }  {pop} ifelse } 10 string /IODevice resourceforall {(True)}{(False)} ifelse = flush"*End*CloseUI: *Option1*OpenUI *Option2/Optional Network Card: PickOne*OrderDependency: 69.6 AnySetup *Option2*DefaultOption2: None*Option2 None/Not Installed: ""*Option2 P1/EtherTalk, NetWare and TCP/IP: ""*Option2 P3/LocalTalk and Serial: ""*Option2 P4/TokenTalk, NetWare and TCP/IP: ""*?Option2: "% Option2 (%EthernetPhysical%) /IODevice resourcestatus {pop pop (P1) } {   (%LocalTalk%) /IODevice resourcestatus   {pop pop (P3) }   {     (%TokenRingPhysical%) /IODevice resourcestatus     {pop pop (P4) } { (None) } ifelse   } ifelse } ifelse = flush"*End*CloseUI: *Option2*CloseGroup: InstallableOptions*% === Constraints ===================*UIConstraints: *Option3 False *InputSlot Middle*UIConstraints: *Option3 False *InputSlot Lower*UIConstraints: *InputSlot Middle *Option3 False*UIConstraints: *InputSlot Lower *Option3 False*% === Basic Device Capabilities ============*LanguageLevel: "2"*Protocols: BCP*FreeVM: "5700000"*VMOption None/40 MB Standard RAM: "5700000"*VMOption 56Meg/56 MB Total RAM: "17700000"*VMOption 72Meg/72 MB Total RAM: "4200000"*ColorDevice: True*DefaultColorSpace: CMYK*AccurateScreensSupport: True*SuggestedJobTimeout: "0"*SuggestedWaitTimeout: "300"*SuggestedManualFeedTimeout: "60"*1284Modes Parallel: Compat Nibble*1284DeviceID: "  MANUFACTURER:Tektronix;COMMAND SET:Adobe Level 2 PostScript;  MODEL:Phaser 560;CLASS:Printer;DESCRIPTION:  Phaser 560 Color Laser Printer, PostScript Level 2, Letter/Legal/A4 Size/#10 Envelope;  COMPATIBLE_ID:"*End*TTRasterizer: Type42*?TTRasterizer: "  42 /FontType resourcestatus  { pop pop (Type42)} {pop pop (None)} ifelse = flush"*End*FileSystem: True*?FileSystem: "  false  (%disk?%)  { currentdevparams dup /Writeable known    { /Writeable get {pop true} if }  {pop} ifelse  } 10 string /IODevice resourceforall  {(True)}{(False)} ifelse = flush"*End*Throughput: "14"*Password: "0"*ExitServer: "  count 0 eq  { false } { true exch startjob } ifelse  not  { (WARNING: Cannot modify initial VM.) =    (Missing or invalid password.) =    (Please contact the author of this software.) = flush quit  } if"*End*Reset: "  count 0 eq  { false } { true exch startjob } ifelse  not  { (WARNING: Cannot reset printer.) =    (Missing or invalid password.) =    (Please contact the author of this software.) = flush quit  } if  systemdict /quit get exec  (WARNING : Printer Reset Failed.) = flush"*End*DefaultResolution: 600dpi*SetResolution 600dpi : ""*SetResolution 1200dpi : ""*?Resolution: "  currentpagedevice /HWResolution get 0 get (    ) cvs print (dpi) = flush"*End*% Halftone Information =================*DefaultHalftoneType: 9*ScreenFreq: "60.0"*ScreenAngle: "45.0"*DefaultScreenProc: Dot*ScreenProc Dot: "{180 mul cos exch 180 mul cos add 2 div} bind"*DefaultTransfer: Null*Transfer Null: "{ }"*Transfer Null.Inverse: "{1 exch sub} bind"*% Tray Selection ============*OpenUI *TKMPFMedia/MP Manual Feed Media: PickOne*OrderDependency: 45.0 AnySetup *TKMPFMedia*DefaultTKMPFMedia: Paper*TKMPFMedia Paper: "userdict /MFMedia (Paper) put"*TKMPFMedia Duplex/Paper 2nd Side: "userdict /MFMedia (Duplex) put"*TKMPFMedia Transparency: "userdict /MFMedia (Transparency) put"*TKMPFMedia CoatedPaper/Coated Paper: "userdict /MFMedia (CoatedPaper) put"*TKMPFMedia CardStock/Card or Envelope: "userdict /MFMedia (CardStock) put"*TKMPFMedia Label: "userdict /MFMedia (Label) put"*TKMPFMedia FabricTransfer/Fabric Transfer: " userdict /MFMedia (FabricTransfer) put"*End *?TKMPFMedia: "  /MFMedia where {/MFMedia get}{(Unknown)} ifelse  = flush"*End*CloseUI: *TKMPFMedia*OpenUI *InputSlot: PickOne*OrderDependency: 46.0 AnySetup *InputSlot*DefaultInputSlot: Paper*InputSlot Paper: "  <<    /MediaPosition null    /MediaType (Paper)    /TraySwitch true    /ManualFeed false  >> setpagedevice"*End*InputSlot Transparency: "  <<    /MediaPosition null    /MediaType (Transparency)    /TraySwitch true    /ManualFeed false  >> setpagedevice"*End*InputSlot Upper: "  <<    /MediaPosition 0    /MediaType null    /TraySwitch false    /ManualFeed false  >> setpagedevice"*End*InputSlot Middle: "  <<    /MediaPosition 1    /MediaType null    /TraySwitch false    /ManualFeed false  >> setpagedevice"*End*InputSlot Lower: "  <<    /MediaPosition 2    /MediaType null    /TraySwitch false    /ManualFeed false  >> setpagedevice"*End*InputSlot MPTray/Multi-Purpose Tray: "  <<    /MediaPosition 3    /MediaType null    /TraySwitch false    /ManualFeed false  >> setpagedevice"*End*InputSlot MPMF/Multi-Purpose Manual Feed: "    <<      /MediaPosition null      /MediaType /MFMedia where {/MFMedia get }{(Paper)}ifelse      /TraySwitch false      /ManualFeed true    >> setpagedevice"*End*?InputSlot: "currentpagedevice begin ManualFeed {(MPMF)} {MediaPosition null eq {MediaType} {[(Upper) (Middle) (Lower) (MPTray)] MediaPosition get}ifelse}ifelse end= flush"*End*CloseUI: *InputSlot*% Paper Handling ===================*% Use these entries to set paper size most of the time,*% unless there is specific reason to use PageRegion.*OpenUI *PageSize: PickOne*OrderDependency: 56.0 AnySetup *PageSize*DefaultPageSize: Letter*PageSize Letter: "<< /PageSize [612 792] /ImagingBBox null >> setpagedevice"*PageSize Legal: "<< /PageSize [612 1008] /ImagingBBox null >> setpagedevice"*PageSize A4: "<< /PageSize [595 842] /ImagingBBox null >> setpagedevice"*PageSize Env10/#10 Envelope: "<< /PageSize [297 684] /ImagingBBox null >> setpagedevice"*?PageSize: "  currentpagedevice /PageSize get aload pop   2 copy gt {exch} if (Unknown)  <<  [612 792] (Letter)  [612 1008] (Legal)  [595 842] (A4)  [297 684] (Env10) >>  { exch aload pop 4 index sub abs 5 le exch 5 index sub abs 5 le and       { exch pop exit } { pop } ifelse  } bind forall = flush pop pop"*End*CloseUI: *PageSize*% These entries will set up the frame buffer. Usually used with manual feed.*OpenUI *PageRegion: PickOne*OrderDependency: 56.0 AnySetup *PageRegion*DefaultPageRegion: Letter*PageRegion Letter: "<< /PageSize [612 792] /ImagingBBox null >> setpagedevice"*PageRegion Legal: "<< /PageSize [612 1008] /ImagingBBox null >> setpagedevice"*PageRegion A4: "<< /PageSize [595 842] /ImagingBBox null >> setpagedevice"*PageRegion Env10/#10 Envelope: "<< /PageSize [297 684] /ImagingBBox null >> setpagedevice"*CloseUI: *PageRegion*% The following entries provide information about specific paper keywords.*DefaultImageableArea: Letter*ImageableArea Letter: "10.32 15.91 601.68 776.22"*ImageableArea Legal: "10.32 16.39 601.68 991.74"*ImageableArea A4: "13.45 14.47 581.76 828.54"*ImageableArea Env10/#10 Envelope: "10.32 11.82 286.8 672.3"*?ImageableArea: "  currentpagedevice pop  clippath pathbbox  /cvp {16 string cvs print ( ) print} def  4 3 roll 100 mul ceiling 100 div cvp  3 2 roll 100 mul ceiling 100 div cvp  exch 100 mul floor 100 div cvp  100 mul floor 100 div = flush  userdict /cvp undef"*End*% These provide the physical dimensions of the paper (by keyword)*DefaultPaperDimension: Letter*PaperDimension Letter: "612 792"*PaperDimension Legal: "612 1008"*PaperDimension A4: "595 842"*PaperDimension Env10/#10 Envelope: "297 684"*RequiresPageRegion All: True*% TKColor Selections  ===================*OpenUI *TKColor/Color Correction: PickOne*OrderDependency: 40.0 AnySetup *TKColor*DefaultTKColor: Automatic*TKColor Automatic: "  <<    /DeviceRenderingInfo <<      /Type 2      /VirtualColorDevice <<        /Type 3        /ColorTransform /Automatic      >>    >>  >> setpagedevice"*End*TKColor NoAdjust/None: "  <<    /DeviceRenderingInfo <<      /Type 2      /VirtualColorDevice null    >>  >> setpagedevice"*End*TKColor VividColor/Vivid Color: "  <<    /DeviceRenderingInfo <<      /Type 2      /VirtualColorDevice <<        /Type 3        /ColorTransform /TekBlue      >>    >>  >> setpagedevice"*End*TKColor SimulateDisplay/Simulate Display: "  <<    /DeviceRenderingInfo <<      /Type 2      /VirtualColorDevice <<        /Type 3        /ColorTransform /TekDisplay      >>    >>  >> setpagedevice"*End*TKColor SWOPPress/SWOP Press: "  <<    /DeviceRenderingInfo <<      /Type 2      /VirtualColorDevice <<        /Type 3        /ColorTransform /SWOP-Coated      >>    >>  >> setpagedevice"*End*TKColor EuroscalePress/Euroscale Press: "  <<    /DeviceRenderingInfo <<      /Type 2      /VirtualColorDevice <<        /Type 3        /ColorTransform /Euroscale-Coated      >>    >>  >> setpagedevice"*End*TKColor CommercialPress/Commercial Press: "  <<    /DeviceRenderingInfo <<      /Type 2      /VirtualColorDevice <<        /Type 3        /ColorTransform /Commercial-Coated      >>    >>  >> setpagedevice"*End*TKColor UsePrinterSetting/Use Printer Setting: ""*?TKColor: "  { currentpagedevice /DeviceRenderingInfo get    /VirtualColorDevice get    dup null eq    { pop (NoAdjust) }    { /ColorTransform get      <<        /Automatic         (Automatic)        /TekBlue           (VividColor)        /TekDisplay        (SimulateDisplay)        /SWOP-Coated       (SWOPPress)        /Euroscale-Coated  (EuroscalePress)        /Commercial-Coated (CommercialPress)      >>      exch get    } ifelse  } stopped  { % error in PostScript code execution    pop pop (Unknown)  } if  = flush"*End*CloseUI: *TKColor*% Print Quality Selection  ===================*OpenUI *OutputMode/Print Quality: PickOne*OrderDependency: 47.0 AnySetup *OutputMode*DefaultOutputMode: Standard*OutputMode FastMono/Fast Monochrome  600x600 dpi: "  <<    /HWResolution [600 600]    /ProcessColorModel /DeviceGray  >> setpagedevice"*End*OutputMode PremiumMono/Premium Monochrome  1200x1200 dpi: "mark  { 1 dict begin      /DeviceRenderingInfo 2 dict begin        /Type 2 def        /VirtualColorDevice 2 dict begin          /Type 1 def          /ColorTransform /Gray def        currentdict end def      currentdict end def    currentdict end    setpagedevice  <<    /HWResolution [1200 1200]  >> setpagedevice    } stopped cleartomark"*End*OutputMode FastColor/Fast Color  600x600 dpi: "  <<    /HWResolution [600 600]    /ProcessColorModel /DeviceCMY  >> setpagedevice"*End*OutputMode Presentation/Presentation  600x600 dpi: "  <<    /HWResolution [600 600]    /ProcessColorModel /DeviceCMYK    /PostRenderingEnhance true    /PostRenderingEnhanceDetails <<       /OutputMode (Presentation)    >>  >> setpagedevice"*End*OutputMode Standard/Standard  600x600 dpi: "  <<    /HWResolution [600 600]    /ProcessColorModel /DeviceCMYK    /PostRenderingEnhance true    /PostRenderingEnhanceDetails <<      /OutputMode (Standard)    >>  >> setpagedevice"*End*OutputMode Premium/Premium  1200x1200 dpi: "  <<    /HWResolution [1200 1200]    /ProcessColorModel /DeviceCMYK    /PostRenderingEnhance true    /PostRenderingEnhanceDetails <<      /OutputMode (Standard)    >>  >> setpagedevice"*End*?OutputMode: "  currentpagedevice /ProcessColorModel get dup /DeviceGray eq   {    pop (FastMono)   }  {    /DeviceCMY eq     {      (FastColor)    }    {      currentpagedevice /HWResolution get 0 get 1200 eq       {        (Premium)      }      {        currentpagedevice /PostRenderingEnhanceDetails get /OutputMode get      } ifelse    } ifelse  } ifelse  = flush"*End*CloseUI: *OutputMode*OpenUI *TKImageSmoothing/Image Smoothing: Boolean*OrderDependency: 52.0 AnySetup *TKImageSmoothing*DefaultTKImageSmoothing: False*TKImageSmoothing False/Off: "  false /RRCustomProcs /ProcSet findresource /setforceinterpolate get exec"*End*TKImageSmoothing True/On: "  true /RRCustomProcs /ProcSet findresource /setforceinterpolate get exec"*End*?TKImageSmoothing: "  /RRCustomProcs /ProcSet findresource /currentforceinterpolate get exec  {(True)}{(False)} ifelse  = flush"*End*CloseUI: *TKImageSmoothing*OpenUI *TKOutputOrder/Output Order: PickOne*OrderDependency: 44.0 AnySetup *TKOutputOrder*DefaultTKOutputOrder: Reverse*TKOutputOrder Normal/Face Down: "  << /OutputFaceUp false >> setpagedevice"*TKOutputOrder Reverse/Face Up: "  << /OutputFaceUp true >> setpagedevice"*?TKOutputOrder: "  currentpagedevice /OutputFaceUp get  { (Reverse) }  { (Normal)  } ifelse  = flush"*End*CloseUI: *TKOutputOrder*OpenUI *TKCollate/Quick Collate: Boolean*OrderDependency: 50.0 AnySetup *TKCollate*DefaultTKCollate: False*TKCollate False/Off: "<< /Collate false >> setpagedevice"*TKCollate True/On: "<< /Collate true >> setpagedevice"*?TKCollate: "  save  currentpagedevice /Collate get {(True)}{(False)}ifelse  = flush restore"*End*CloseUI: *TKCollate*OpenUI *TKCheckPrint/Check Print: Boolean*OrderDependency: 55.0 AnySetup *TKCheckPrint*DefaultTKCheckPrint: False*TKCheckPrint False/Off: ""*TKCheckPrint True/On: "  /RRCustomProcs /ProcSet findresource /setcheckprint get exec"*End*?TKCheckPrint: "  /RRCustomProcs /ProcSet findresource  /currentcheckprint get exec {(True)}{(False)}ifelse  = flush"*End*CloseUI: *TKCheckPrint*% Font Information =====================*DefaultFont: Courier*Font AvantGarde-Book: Standard "(001.006S)" Standard ROM*Font AvantGarde-BookOblique: Standard "(001.006S)" Standard ROM*Font AvantGarde-Demi: Standard "(001.007S)" Standard ROM*Font AvantGarde-DemiOblique: Standard "(001.007S)" Standard ROM*Font Bookman-Demi: Standard "(001.004S)" Standard ROM*Font Bookman-DemiItalic: Standard "(001.004S)" Standard ROM*Font Bookman-Light: Standard "(001.004S)" Standard ROM*Font Bookman-LightItalic: Standard "(001.004S)" Standard ROM*Font Courier: Standard "(002.004S)" Standard ROM*Font Courier-Bold: Standard "(002.004S)" Standard ROM*Font Courier-BoldOblique: Standard "(002.004S)" Standard ROM*Font Courier-Oblique: Standard "(002.004S)" Standard ROM*Font Helvetica: Standard "(001.006S)" Standard ROM*Font Helvetica-Bold: Standard "(001.007S)" Standard ROM*Font Helvetica-BoldOblique: Standard "(001.007S)" Standard ROM*Font Helvetica-Condensed: Standard "(001.001)" Standard ROM*Font Helvetica-Condensed-Bold: Standard "(001.002)" Standard ROM*Font Helvetica-Condensed-BoldObl: Standard "(001.002)" Standard ROM*Font Helvetica-Condensed-Oblique: Standard "(001.001)" Standard ROM*Font Helvetica-Narrow: Standard "(001.006S)" Standard ROM*Font Helvetica-Narrow-Bold: Standard "(001.007S)" Standard ROM*Font Helvetica-Narrow-BoldOblique: Standard "(001.007S)" Standard ROM*Font Helvetica-Narrow-Oblique: Standard "(001.006S)" Standard ROM*Font Helvetica-Oblique: Standard "(001.006S)" Standard ROM*Font NewCenturySchlbk-Bold: Standard "(001.009S)" Standard ROM*Font NewCenturySchlbk-BoldItalic: Standard "(001.007S)" Standard ROM*Font NewCenturySchlbk-Italic: Standard "(001.006S)" Standard ROM*Font NewCenturySchlbk-Roman: Standard "(001.007S)" Standard ROM*Font Palatino-Bold: Standard "(001.005S)" Standard ROM*Font Palatino-BoldItalic: Standard "(001.005S)" Standard ROM*Font Palatino-Italic: Standard "(001.005S)" Standard ROM*Font Palatino-Roman: Standard "(001.005S)" Standard ROM*Font Symbol: Special "(001.007S)" Special ROM*Font Times-Bold: Standard "(001.007S)" Standard ROM*Font Times-BoldItalic: Standard "(001.009S)" Standard ROM*Font Times-Italic: Standard "(001.007S)" Standard ROM*Font Times-Roman: Standard "(001.007S)" Standard ROM*Font ZapfChancery-MediumItalic: Standard "(001.007S)" Standard ROM*Font ZapfDingbats: Special "(001.004S)" Special ROM*?FontQuery: "  { count 1 gt    { exch dup 127 string cvs (/) print print (:) print     /Font resourcestatus {pop pop (Yes)} {(No)} ifelse =     } { exit } ifelse  } bind loop  (*) = flush"*End*?FontList: "(*) {cvn ==} 128 string /Font resourceforall (*) = flush"*InkName: ProcessBlack/Process Black*InkName: CustomColor/Custom Color*InkName: ProcessCyan/Process Cyan*InkName: ProcessMagenta/Process Magenta*InkName: ProcessYellow/Process Yellow*DefaultColorSep: ProcessBlack.60lpi.600dpi/60 lpi / 600 dpi*%  For 60 lpi / 600 dpi ================================*ColorSepScreenAngle ProcessBlack.60lpi.600dpi/60 lpi / 600 dpi: "45.0"*ColorSepScreenAngle CustomColor.60lpi.600dpi/60 lpi / 600 dpi: "45.0"*ColorSepScreenAngle ProcessCyan.60lpi.600dpi/60 lpi / 600 dpi: "45.0"*ColorSepScreenAngle ProcessMagenta.60lpi.600dpi/60 lpi / 600 dpi: "45.0"*ColorSepScreenAngle ProcessYellow.60lpi.600dpi/60 lpi / 600 dpi: "45.0"*ColorSepScreenFreq ProcessBlack.60lpi.600dpi/60 lpi / 600 dpi: "60.0"*ColorSepScreenFreq CustomColor.60lpi.600dpi/60 lpi / 600 dpi: "60.0"*ColorSepScreenFreq ProcessCyan.60lpi.600dpi/60 lpi / 600 dpi: "60.0"*ColorSepScreenFreq ProcessMagenta.60lpi.600dpi/60 lpi / 600 dpi: "60.0"*ColorSepScreenFreq ProcessYellow.60lpi.600dpi/60 lpi / 600 dpi: "60.0"*% end of PPD file for Tektronix Phaser 560 Extended  -TB
*%APLANNOTATE START
*%XML: <?xml version="1.0" encoding="UTF-8"?>
*%XML: <!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
*%XML: <plist version="1.0">
*%XML: <dict>
*%XML: 	<key>OriginalPPD</key>
*%XML: 	<string>file://localhost/Library/Printers/PPDs/Contents/Resources/en.lproj/Phaser%20560%20Ext.PPD</string>
*%XML: </dict>
*%XML: </plist>
*%APLANNOTATE END
